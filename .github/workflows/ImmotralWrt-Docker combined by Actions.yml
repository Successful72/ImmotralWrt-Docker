name: Build ImmotralWrtWrt Docker Image

env:
  PREFIX_URL: https://downloads.immortalwrt.org/releases/24.10.0/targets/
  DEVICE_VERSION: 24.10.0

on:
  workflow_dispatch:
    inputs:
      IP_ADDRESS:
        description: '请指定OpenWrt的IPv4地址(默认:192.168.1.1)'
        required: true
        default: '192.168.1.1'
      GATEWAY:
        description: '请指定OpenWrt的网关(默认:192.168.1.254)'
        required: true
        default: '192.168.1.254'
      DNS_SERVER:
        description: '请指定OpenWrt的DNS服务器(默认:8.8.8.8)'
        required: true
        default: '8.8.8.8'

jobs:
  Build:
    name: Build ImmortalWrt Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential libncurses5-dev libncursesw5-dev \
            zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip python3 qemu-utils genisoimage zstd 

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Environment Variables
        run: |
          echo "DEVICE_PLATFORM=x86" >> $GITHUB_ENV
          echo "DEVICE_TARGET=x86" >> $GITHUB_ENV
          echo "DEVICE_SUBTARGET=64" >> $GITHUB_ENV

      - name: Download Image Builder
        run: |
          wget -q $PREFIX_URL/$DEVICE_TARGET/$DEVICE_SUBTARGET/immortalwrt-imagebuilder-$DEVICE_VERSION-$DEVICE_TARGET-$DEVICE_SUBTARGET.Linux-x86_64.tar.zst

      - name: Set Image Builder
        run: |
          tar -I zstd -xvf *.tar.zst
          cd immortalwrt-imagebuilder-$DEVICE_VERSION-$DEVICE_TARGET-$DEVICE_SUBTARGET.Linux-x86_64
          cp -rf $GITHUB_WORKSPACE/files .

          # 获取用户输入的变量
          IP_ADDRESS="${{ github.event.inputs.IP_ADDRESS }}"
          GATEWAY="${{ github.event.inputs.GATEWAY }}"
          DNS_SERVER="${{ github.event.inputs.DNS_SERVER }}"

          # 使用 sed 替换模板中的占位符
          sed -i "s/{{IP_ADDRESS}}/${IP_ADDRESS}/g" files/etc/config/network
          sed -i "s/{{GATEWAY}}/${GATEWAY}/g" files/etc/config/network
          sed -i "s/{{DNS_SERVER}}/${DNS_SERVER}/g" files/etc/config/network
          
          chmod +x files/etc/rc.local

      - name: Get Date and Time
        id: datetime
        run: echo "DATE_TIME=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

      - name: Build RootFS
        run: |
          cd immortalwrt-imagebuilder-$DEVICE_VERSION-$DEVICE_TARGET-$DEVICE_SUBTARGET.Linux-x86_64
          chmod +x $GITHUB_WORKSPACE/scripts/*
          $GITHUB_WORKSPACE/scripts/preset-terminal-tools.sh
          export CONFIG_PACKAGES=$(cat $GITHUB_WORKSPACE/config/packages.config | tr -s "\n" " ")
          make image PACKAGES="$CONFIG_PACKAGES" FILES="files"
          cp -rf bin/targets/$DEVICE_TARGET/$DEVICE_SUBTARGET/*rootfs.tar.gz $GITHUB_WORKSPACE/immortalwrt-rootfs-${{ env.DATE_TIME }}.tar.gz

      
         
      - name: Build Docker Image
        run: |
          docker build -t immortalwrt:${{ env.DATE_TIME }} -f Dockerfile .
          docker save -o immortalwrt-docker-image-${{ env.DATE_TIME }}.tar immortalwrt:${{ env.DATE_TIME }}
          gzip immortalwrt-docker-image-${{ env.DATE_TIME }}.tar
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: immortalwrt-${{ env.DATE_TIME }}  # 使用环境变量来设置tag_name
          name: ImmortalWrt Docker Image ${{ env.DATE_TIME }}
          draft: false
          prerelease: false
          files: |
            immortalwrt-docker-image-${{ env.DATE_TIME }}.tar.gz
            immortalwrt-rootfs-${{ env.DATE_TIME }}.tar.gz
