name: Build ImmotralWrtWrt Docker Image

env:
  PREFIX_URL: https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/targets/
  DEVICE_VERSION: 24.10-SNAPSHOT

on:
  workflow_dispatch:

jobs:
  Build:
    name: Build ImmortalWrt Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential libncurses5-dev libncursesw5-dev \
            zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip python3 qemu-utils genisoimage zstd 

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Environment Variables
        run: |
          echo "DEVICE_PLATFORM=x86" >> $GITHUB_ENV
          echo "DEVICE_TARGET=x86" >> $GITHUB_ENV
          echo "DEVICE_SUBTARGET=64" >> $GITHUB_ENV

      - name: Download Image Builder
        run: |
          wget -q $PREFIX_URL/$DEVICE_TARGET/$DEVICE_SUBTARGET/immortalwrt-imagebuilder-$DEVICE_VERSION-$DEVICE_TARGET-$DEVICE_SUBTARGET.Linux-x86_64.tar.zst

      - name: Set Image Builder
        run: |
          tar -I zstd -xvf *.tar.zst
          cd immortalwrt-imagebuilder-$DEVICE_VERSION-$DEVICE_TARGET-$DEVICE_SUBTARGET.Linux-x86_64
          cp -rf $GITHUB_WORKSPACE/files .
          chmod +x files/etc/rc.local

      - name: Build RootFS
        run: |
          cd immortalwrt-imagebuilder-$DEVICE_VERSION-$DEVICE_TARGET-$DEVICE_SUBTARGET.Linux-x86_64
          chmod +x $GITHUB_WORKSPACE/scripts/*
          $GITHUB_WORKSPACE/scripts/preset-terminal-tools.sh
          export CONFIG_PACKAGES=$(cat $GITHUB_WORKSPACE/config/packages.config | tr -s "\n" " ")
          make image PACKAGES="$CONFIG_PACKAGES" FILES="files"
          cp -rf bin/targets/$DEVICE_TARGET/$DEVICE_SUBTARGET/*rootfs.tar.gz $GITHUB_WORKSPACE/immortalwrt-rootfs.tar.gz
          
      - name: Build Docker Image
        run: |
          docker build -t immortalwrt:latest -f Dockerfile .
          docker save -o immortalwrt-docker-image.tar immortalwrt:latest
          gzip immortalwrt-docker-image.tar

      - name: Get Date
        id: date
        run: echo "DATE=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: immortalwrt-${{ steps.date.outputs.DATE }}
          name: ImmortalWrt Docker Image ${{ steps.date.outputs.DATE }}
          draft: false
          prerelease: false
          files: |
            immortalwrt-docker-image.tar.gz
            immortalwrt-rootfs.tar.gz
